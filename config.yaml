name: "J5 Hassio Bridge"
description: "Bridge to interface arduino's (ConfigurableFirmata) with HAssio via Johnny-Five."
version: "1.1.23"
slug: "j5_ha_bridge"
init: false
arch:
  - aarch64
  - amd64
  - armhf
  - armv7
  - i386
devices:
  - "/dev/ttyACM0"
  - "/dev/ttyACM1"
  - "/dev/ttyUSB0"
  - "/dev/ttyUSB1"

services:
  - mqtt:need

#  - j5-ha-bridge

#privileged: true
#Add-ons can call some API commands without needing to set hassio_api: true:
#https://developers.home-assistant.io/docs/add-ons/communication
hassio_role: "default"
#hassio_api: true
options:
  baudrate: 115200 # baudrate for serial communication with the board, default is 115200
  binary_sensors: [] # list of binary_sensors, default is none
  relays: [] # list of relays, default is none
  sensors: [] # list of sensors, default is none
  thermometers: [] # list of thermometers, default is none
  calibration_sets: [] # list of calibration set points
  device: null
  discovery_topic: "homeassistant"
schema:
  device: device(subsystem=tty) # device to wich board is connected
  baudrate: list(9600|19200|38400|57600|115200)? # baudrate for serial communication with the board
  discovery_topic: str?

  # calibration sets are to be defined with a common set name.
  # the set will have to be referenced by "calibration_set" which is a kind of foreign key mapped to
  # this "calibration_sets.set" attribute
  # this limitation is due to the fact that
  # "Nested arrays and dictionaries are supported with a maximum depth of two." in home assistant
  calibration_sets:
    - set: str?
      x_point: float?
      y_point: float?

  binary_sensors:
    - name: str # Specify the name of the switch
      pin: str # Specify the data pin of the switch
      type: list(NO|NC)? # Normally Open or Normally Closed
      device_class: list(None|battery|battery_charging|carbon_monoxide|cold|connectivity|door|garage_door|gas|heat|light|lock|moisture|motion|moving|occupancy|opening|plug|power|presence|problem|running|safety|smoke|sound|tamper|update|vibration|window)?
      invert: bool?
  relays:
    - name: str? # Specify the name of the relay
      pin: str # Specify the data pin of the relay
      type: list(NO|NC) # Normally Open or Normally Closed
      device_class: str?
  sensors:
    - name: str # Specify the name of the sensor
      pin: str # Specify the pin of the sensor
      unit: str # Specify the unit of the sensor
      #device_class: list(battery|current|humidity|pressure|temperature|voltage)?
      device_class: list(None|apparent_power|aqi|atmospheric_pressure|battery|carbon_dioxide|carbon_monoxide|current|data_rate|data_size|date|distance|duration|energy|energy_storage|enum|frequency|gas|humidity|illuminance|irradiance|moisture|monetary|nitrogen_dioxide|nitrogen_monoxide|nitrous_oxide|ozone|pm1|pm25|pm10|power_factor|power|precipitation|precipitation_intensity|pressure|reactive_power|signal_strength|sound_pressure|speed|sulphur_dioxide|temperature|timestamp|volatile_organic_compounds|voltage|volume|volume_storage|water|weight|wind_speed)
      state_class: list(measurement,total,total_increasing)?
      threshold: float?
      freq: int?
      calibration_set: str?
      calibration_type: list(linear|polynomial|exponential|logarithmic|power)?
      calibration_precision: int?
      calibration_order: int?
  thermometers:
    - name: str # Specify the name of the thermometer
      pin: str # Specify the pin of the thermometer
      address: str? # Specify, when the address of the thermometer, should be provided as it is used for unique_id in mqtt topic except for AUTO-DS18B20
      controler: list(ANALOG|LM35|TMP36|DS18B20|MPU6050|GROVE|BMP180|MPL115A2|MPL3115A2|HTU21D|MCP9808|SI7020|SI7021|LSM303C|AUTO-DS18B20) # Specify the type of thermometer
      unit: list('°F'|'K'|'°C')? # Specify the unit of the thermometer, default is "°C"
      freq: int?
